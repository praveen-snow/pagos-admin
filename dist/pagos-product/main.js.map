{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book-create/book-create.component.css","webpack:///./src/app/book-create/book-create.component.html","webpack:///./src/app/book-create/book-create.component.ts","webpack:///./src/app/book-detail/book-detail.component.css","webpack:///./src/app/book-detail/book-detail.component.html","webpack:///./src/app/book-detail/book-detail.component.ts","webpack:///./src/app/book-edit/book-edit.component.css","webpack:///./src/app/book-edit/book-edit.component.html","webpack:///./src/app/book-edit/book-edit.component.ts","webpack:///./src/app/book/book.component.css","webpack:///./src/app/book/book.component.html","webpack:///./src/app/book/book.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/api\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getProducts(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getProduct(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postProduct(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateProduct(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteProduct(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BookComponent } from './book/book.component';\nimport { BookDetailComponent } from './book-detail/book-detail.component';\nimport { BookCreateComponent } from './book-create/book-create.component';\nimport { BookEditComponent } from './book-edit/book-edit.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {\n  MatInputModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatSortModule,\n  MatTableModule,\n  MatIconModule,\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule } from \"@angular/material\";\n\nconst appRoutes: Routes = [\n  {\n    path: 'products',\n    component: BookComponent,\n    data: { title: 'Product List' }\n  },\n  {\n    path: 'product-details/:id',\n    component: BookDetailComponent,\n    data: { title: 'Product Details' }\n  },\n  {\n    path: 'product-create',\n    component: BookCreateComponent,\n    data: { title: 'Create Product' }\n  },\n  {\n    path: 'product-edit/:id',\n    component: BookEditComponent,\n    data: { title: 'Edit Product' }\n  },\n  { path: '',\n    redirectTo: '/products',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookComponent,\n    BookDetailComponent,\n    BookCreateComponent,\n    BookEditComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-form {\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9vay1jcmVhdGUvYm9vay1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9ib29rLWNyZWF0ZS9ib29rLWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZm9ybSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5leGFtcGxlLWZ1bGwtd2lkdGg6bnRoLWxhc3QtY2hpbGQoKSB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5idXR0b24tcm93IHtcbiAgbWFyZ2luOiAxMHB4IDA7XG59Il19 */\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/products']\\\">\\n    <mat-icon>list</mat-icon>\\n  </a>\\n</div>\\n<form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"onFormSubmit(productForm.value)\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"SKU\\\" formControlName=\\\"sku\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('sku').valid && productForm.get('sku').touched\\\">Please enter sku</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('title').valid && productForm.get('title').touched\\\">Please enter product\\n        title</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Model\\\" formControlName=\\\"model\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('model').valid && productForm.get('model').touched\\\">Please enter product\\n        model</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('description').valid && productForm.get('description').touched\\\">Please enter\\n        product description</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Color\\\" formControlName=\\\"color\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('color').valid && productForm.get('color').touched\\\">Please enter color</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Price\\\" formControlName=\\\"price\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('price').valid && productForm.get('price').touched\\\">Please enter price</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Coupon\\\" formControlName=\\\"coupon\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('coupon').valid && productForm.get('coupon').touched\\\">Please enter color</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Small\\\" formControlName=\\\"small\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('small').valid && productForm.get('small').touched\\\">Please enter\\n        size small</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Medium\\\" formControlName=\\\"medium\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('medium').valid && productForm.get('medium').touched\\\">Please enter\\n        size medium</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Large\\\" formControlName=\\\"large\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('large').valid && productForm.get('large').touched\\\">Please enter\\n        size large</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"X-Large\\\" formControlName=\\\"xlarge\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('xlarge').valid && productForm.get('xlarge').touched\\\">Please enter\\n        size x-large</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field *ngFor=\\\"let item of imageList; let i = index;\\\" class=\\\"example-full-width\\\">\\n    <input matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"item.image\\\"\\n      (ngModelChange)=\\\"changeInModelValue(item.image, i)\\\" placeholder=\\\"Image\\\">\\n    <mat-icon matSuffix (click)=\\\"deleteImage(i)\\\">delete</mat-icon>\\n  </mat-form-field>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"column\\\" *ngFor=\\\"let item of imageList; let i = index;\\\">\\n      <img *ngIf=\\\"item.image !== ''\\\" src=\\\"{{'http://drive.google.com/uc?id=' + item.image}}\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"button-row\\\">\\n    <button (click)=\\\"addNewImage()\\\" type=\\\"button\\\" mat-raised-button color=\\\"primary\\\">\\n      <mat-icon>add_a_photo</mat-icon>\\n    </button>\\n  </div>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">\\n      <mat-icon>save</mat-icon>\\n    </button>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-create',\n  templateUrl: './book-create.component.html',\n  styleUrls: ['./book-create.component.css']\n})\n\nexport class BookCreateComponent implements OnInit {\n\n  productForm: FormGroup;\n  sku: string = '';\n  title: string = '';\n  description: string = '';\n  model: string = '';\n  color: string = '';\n  price: String = '';\n  coupon: String = '';\n  small: number = 0;\n  medium: number = 0;\n  large: number = 0;\n  xlarge: number = 0;\n  matcher: any;\n  public imageList: any = [];\n\n  constructor(private router: Router, private api: ApiService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.productForm = this.formBuilder.group({\n      'sku': [null, Validators.required],\n      'title': [null, Validators.required],\n      'description': [null, Validators.required],\n      'model': [null, Validators.required],\n      'color': [null, Validators.required],\n      'price': [null, Validators.required],\n      'coupon': [null, Validators.required],\n      'small': [null, Validators.required],\n      'medium': [null, Validators.required],\n      'large': [null, Validators.required],\n      'xlarge': [null, Validators.required]\n    });\n  }\n\n  deleteImage(imageIndex){\n    this.imageList.splice(imageIndex, 1) \n  }\n\n  checkProperties(obj) {\n    for (var key in obj) {\n      if (obj[key] !== null && obj[key] != \"\")\n        return false;\n    }\n    return true;\n  }\n\n  onFormSubmit(form: any) {\n    const flag = this.checkProperties(form);\n    if (flag) return;\n    form.images = this.imageList;\n    this.api.postProduct(form)\n      .subscribe(res => {\n        let id = res['_id'];\n        this.router.navigate(['/product-details', id]);\n      }, (err) => {\n        console.log(err);\n      });\n  }\n\n  changeInModelValue(value, index) {\n    this.imageList[index].image = value;\n  }\n\n  addNewImage() {\n    this.imageList.push({\n      image: ''\n    });\n  }\n}\n","module.exports = \".example-card {\\n  width: 50%;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\\n.cardWrapper{\\n  display: flex;\\n}\\n\\n.marginRight{\\n  margin-right: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9vay1kZXRhaWwvYm9vay1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9ib29rLWRldGFpbC9ib29rLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZCB7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5idXR0b24tcm93IHtcbiAgbWFyZ2luOiAxMHB4IDA7XG59XG5cbi5jYXJkV3JhcHBlcntcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLm1hcmdpblJpZ2h0e1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" class=\\\"marginRight\\\" [routerLink]=\\\"['/products']\\\">\\n    <mat-icon>list</mat-icon>\\n  </a>\\n  <a mat-raised-button color=\\\"primary\\\" class=\\\"marginRight\\\" [routerLink]=\\\"['/product-edit', product._id]\\\">\\n    <mat-icon>edit</mat-icon>\\n  </a>\\n  <a mat-raised-button color=\\\"warn\\\" class=\\\"marginRight\\\" (click)=\\\"deleteProduct(product._id)\\\">\\n    <mat-icon>delete</mat-icon>\\n  </a>\\n</div>\\n<mat-card class=\\\"cardWrapper\\\">\\n  <mat-card-content class=\\\"example-card\\\">\\n    <mat-card>\\n      <p>SKU Code</p>\\n      <mat-card>{{product.sku}}</mat-card>\\n    </mat-card>\\n    <mat-card>\\n      <p>Title</p>\\n      <mat-card>{{product.title}}</mat-card>\\n    </mat-card>\\n    <mat-card>\\n      <p>Description</p>\\n      <mat-card>{{product.description}}</mat-card>\\n    </mat-card>\\n    <mat-card>\\n      <p>Model Name</p>\\n      <mat-card>{{product.model}}</mat-card>\\n    </mat-card>\\n    <mat-card>\\n      <p>Price</p>\\n      <mat-card>{{product.price}}</mat-card>\\n    </mat-card>\\n  </mat-card-content>\\n  <mat-card-content class=\\\"example-card\\\">\\n    <mat-card>\\n      <p>Size S</p>\\n      <mat-card>{{product.small}}</mat-card>\\n    </mat-card>\\n    <mat-card>\\n      <p>Size M</p>\\n      <mat-card>{{product.medium}}</mat-card>\\n    </mat-card>\\n    <mat-card>\\n      <p>Size L</p>\\n      <mat-card>{{product.large}}</mat-card>\\n    </mat-card>\\n    <mat-card>\\n      <p>S XL</p>\\n      <mat-card>{{product.xlarge}}</mat-card>\\n    </mat-card>\\n    <mat-card>\\n      <p>Coupon Code</p>\\n      <mat-card>{{product.coupon}}</mat-card>\\n    </mat-card>\\n  </mat-card-content>\\n</mat-card>\\n<mat-card>\\n  <p>Images</p>\\n  <mat-card>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"column\\\" *ngFor=\\\"let item of product.images; let i = index;\\\">\\n        <img *ngIf=\\\"item.image !== ''\\\" src=\\\"{{'http://drive.google.com/uc?id=' + item.image}}\\\">\\n      </div>\\n    </div>\\n  </mat-card>\\n</mat-card>\\n<mat-card>\\n  <p>Update Date</p>\\n  <mat-card>{{product.updated_date | date}}</mat-card>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-book-detail',\n  templateUrl: './book-detail.component.html',\n  styleUrls: ['./book-detail.component.css']\n})\nexport class BookDetailComponent implements OnInit {\n\n  product: any = {};\n\n  constructor(private route: ActivatedRoute, private api: ApiService, private router: Router) { }\n\n  ngOnInit() {\n    this.getProductDetails(this.route.snapshot.params['id']);\n  }\n\n  getProductDetails(id) {\n    this.api.getProduct(id)\n      .subscribe(data => {\n        console.log(data);\n        this.product = data;\n      });\n  }\n\n  deleteProduct(id) {\n    this.api.deleteProduct(id)\n      .subscribe(res => {\n          this.router.navigate(['/products']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","module.exports = \".example-form {\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9vay1lZGl0L2Jvb2stZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2Jvb2stZWRpdC9ib29rLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWZvcm0ge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZXhhbXBsZS1mdWxsLXdpZHRoOm50aC1sYXN0LWNoaWxkKCkge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uYnV0dG9uLXJvdyB7XG4gIG1hcmdpbjogMTBweCAwO1xufVxuIl19 */\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" (click)=\\\"productDetails()\\\">\\n    <mat-icon>show</mat-icon>\\n  </a>\\n</div>\\n<form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"onFormSubmit(productForm.value)\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"SKU\\\" formControlName=\\\"sku\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('sku').valid && productForm.get('sku').touched\\\">Please enter sku</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('title').valid && productForm.get('title').touched\\\">Please enter product\\n        title</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Model\\\" formControlName=\\\"model\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('model').valid && productForm.get('model').touched\\\">Please enter product\\n        model</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('description').valid && productForm.get('description').touched\\\">Please enter\\n        product description</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Color\\\" formControlName=\\\"color\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('color').valid && productForm.get('color').touched\\\">Please enter color</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Price\\\" formControlName=\\\"price\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('price').valid && productForm.get('price').touched\\\">Please enter price</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Coupon\\\" formControlName=\\\"coupon\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('coupon').valid && productForm.get('coupon').touched\\\">Please enter color</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Small\\\" formControlName=\\\"small\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('small').valid && productForm.get('small').touched\\\">Please enter\\n        size small</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Medium\\\" formControlName=\\\"medium\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('medium').valid && productForm.get('medium').touched\\\">Please enter\\n        size medium</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Large\\\" formControlName=\\\"large\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('large').valid && productForm.get('large').touched\\\">Please enter\\n        size large</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"X-Large\\\" formControlName=\\\"xlarge\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!productForm.get('xlarge').valid && productForm.get('xlarge').touched\\\">Please enter\\n        size x-large</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field *ngFor=\\\"let item of imageList; let i = index;\\\" class=\\\"example-full-width\\\">\\n    <input matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"item.image\\\"\\n      (ngModelChange)=\\\"changeInModelValue(item.image, i)\\\" placeholder=\\\"Image\\\">\\n    <mat-icon matSuffix (click)=\\\"deleteImage(i)\\\">delete</mat-icon>\\n  </mat-form-field>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"column\\\" *ngFor=\\\"let item of imageList; let i = index;\\\">\\n      <img *ngIf=\\\"item.image !== ''\\\" src=\\\"{{'http://drive.google.com/uc?id=' + item.image}}\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"button-row\\\">\\n    <button (click)=\\\"addNewImage()\\\" type=\\\"button\\\" mat-raised-button color=\\\"primary\\\">\\n      <mat-icon>add_a_photo</mat-icon>\\n    </button>\\n  </div>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">\\n      <mat-icon>save</mat-icon>\\n    </button>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-edit',\n  templateUrl: './book-edit.component.html',\n  styleUrls: ['./book-edit.component.css']\n})\nexport class BookEditComponent implements OnInit {\n\n  id:string = '';\n  productForm: FormGroup;\n  sku: string = '';\n  title: string = '';\n  description: string = '';\n  model: string = '';\n  color: string = '';\n  price: String = '';\n  coupon: String = '';\n  small: string = '';\n  medium: string = '';\n  large: string = '';\n  xlarge: string = '';\n  matcher: any;\n  inventory: any = [];\n  constructor(private router: Router, private route: ActivatedRoute, private api: ApiService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.getProduct(this.route.snapshot.params['id']);\n    this.productForm = this.formBuilder.group({\n      'sku': [null, Validators.required],\n      'title': [null, Validators.required],\n      'description': [null, Validators.required],\n      'model': [null, Validators.required],\n      'color': [null, Validators.required],\n      'price': [null, Validators.required],\n      'coupon': [null, Validators.required],\n      'small': [null, Validators.required],\n      'medium': [null, Validators.required],\n      'large': [null, Validators.required],\n      'xlarge': [null, Validators.required]\n    });\n  }\n\n  getProduct(id) {\n    this.api.getProduct(id).subscribe(data => {\n      this.id = data._id;\n      this.imageList = data.images;\n      this.productForm.setValue({\n        sku: data.sku,\n        title: data.title,\n        description: data.description,\n        model: data.model,\n        color: data.color,\n        price: data.price,\n        coupon: data.coupon,\n        small: data.small,\n        medium: data.medium,\n        large: data.large,\n        xlarge: data.xlarge\n      });\n    });\n  }\n\n  onFormSubmit(form:any) {\n    form.images = this.imageList;\n    this.api.updateProduct(this.id, form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/product-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  imageList: any = [];\n\n  changeInModelValue(value, index) {\n    this.imageList[index].image = value;\n  }\n\n  deleteImage(imageIndex){\n    this.imageList.splice(imageIndex, 1) \n  }\n\n  addNewImage() {\n    this.imageList.push({\n      image: ''\n    });\n  }\n\n  productDetails() {\n    this.router.navigate(['/product-details', this.id]);\n  }\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9vay9ib29rLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLDBCQUEwQjtFQUMxQiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYm9vay9ib29rLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXgtaGVpZ2h0OiA1MDBweDtcbiAgbWluLXdpZHRoOiAzMDBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5pc2JuLWNvbCB7XG4gIGZsZXg6IDAgMCAxMDBweCAhaW1wb3J0YW50O1xuICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcbn1cblxuLmJ1dHRvbi1yb3cge1xuICBtYXJnaW46IDEwcHggMDtcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/product-create']\\\">\\n    <mat-icon>add</mat-icon>\\n  </a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"sku\\\">\\n      <th mat-header-cell *matHeaderCellDef> SKU </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"isbn-col\\\"> {{element.sku}} </td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef> Title </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\n    </ng-container>\\n\\n    <!-- Author Column -->\\n    <ng-container matColumnDef=\\\"model\\\">\\n      <th mat-header-cell *matHeaderCellDef> Model </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.model}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"color\\\">\\n      <th mat-header-cell *matHeaderCellDef> Color </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.color}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/product-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n\n  products: any;\n  displayedColumns = ['sku', 'title', 'model', 'color'];\n  dataSource = new BookDataSource(this.api);\n\n  constructor(private api: ApiService) { }\n\n  ngOnInit() {\n    this.api.getProducts()\n      .subscribe(res => {\n        console.log(res);\n        this.products = res;\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n\nexport class BookDataSource extends DataSource<any> {\n  constructor(private api: ApiService) {\n    super()\n  }\n\n  connect() {\n    return this.api.getProducts();\n  }\n\n  disconnect() {\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}